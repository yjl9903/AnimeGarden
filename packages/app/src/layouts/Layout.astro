---
import { ViewTransitions } from 'astro:transitions';

import { parseSearchURL } from 'animegarden';

import Search from '../components/Search';
import Dropdown from '../components/Dropdown.astro';
import { types, fansubs } from '../constant';
import { removeQuote, getRuntimeEnv } from '../utils';

export interface Props {
  title: string;

  timestamp?: Date;
}

const { title } = Astro.props;

const url = Astro.url.pathname;
const search = Astro.url.searchParams;

const feed = `/feed.xml?filter=${generateFeed(Astro.url.searchParams)}`;
const page = Astro.params.page ?? Astro.url.searchParams.get('page') ?? '1';
const enableFeed = page === '1' && !Astro.url.pathname.startsWith('/resource/');

const env = getRuntimeEnv(Astro.locals);
const timestamp =
  Astro.props.timestamp ?? new Date((await env?.animegarden.get('state/refresh-timestamp')) ?? new Date());

const hasFansubSearch = search.has('fansubId');

function generateFeed(params: URLSearchParams) {
  const filter = parseSearchURL(params);
  if (filter.search) {
    filter.search = removeQuote(filter.search);
  }
  return JSON.stringify([{ ...filter, page: undefined, pageSize: undefined }]);
}

function followSearch(params: Record<string, string>) {
  const s = new URLSearchParams(search);
  for (const [key, value] of Object.entries(params)) {
    s.set(key, value);
  }
  return s.toString();
}
---

<!doctype html>
<html lang="zh-CN">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="description" content="ÂãïÊº´Ëä±Âúí 3-rd party mirror site and API endpoint" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <ViewTransitions />
  </head>
  <body>
    <header class="w-full pt-8vh bg-[#fef8f7] border-b">
      <h1 class="text-4xl pb-10rem font-quicksand font-bold text-center select-none">
        <a href="/">üå∏ Anime Garden</a>
      </h1>
      <div class="relative z-100">
        <div class="vercel absolute top-[-7rem] w-full flex justify-center">
          <Search client:only="react" transition:persist />
        </div>
      </div>
      <div class="main flex gap6 hide-scrollbar justify-between select-none text-base-500">
        <div class="flex gap6 justify-start">
          <a href="/" class="header-item block" x-active={url === '/'}>È¶ñÈ°µ</a>
          <a
            href="/resources/1"
            class="header-item block"
            x-active={url.startsWith('/resources/') && !search.has('type') && !search.has('fansub')}
            >ÊâÄÊúâËµÑÊ∫ê</a
          >
          <div class="header-item cursor-pointer" x-active={search.has('type')}>
            <Dropdown>
              <span>Á±ªÂûã</span>
              <div slot="dropdown" class="mt4">
                <div
                  class="w-[120px] max-h-[600px] overflow-y-auto rounded-md border shadow-box bg-light-100 divide-y"
                >
                  {
                    types.map((t) => (
                      <a
                        href={`/resources/1?${followSearch({ type: t })}`}
                        class="px2 py1 block text-base-600 text-link-active"
                      >
                        {t}
                      </a>
                    ))
                  }
                </div>
              </div>
            </Dropdown>
          </div>
          <div class="header-item cursor-pointer" x-active={search.has('fansub')}>
            <Dropdown>
              <span>Â≠óÂπïÁªÑ</span>
              <div slot="dropdown" class="mt4">
                <div
                  class="w-[180px] max-h-[600px] overflow-y-auto rounded-md border shadow-box bg-light-100 divide-y"
                >
                  {
                    hasFansubSearch && (
                      <a
                        href={`/resources/1?${followSearch({ fansubId: '' })}`}
                        class="px2 py1 block text-base-600 text-link-active"
                      >
                        ÊâÄÊúâ
                      </a>
                    )
                  }
                  {
                    fansubs.map((t) => (
                      <a
                        href={`/resources/1?${followSearch({ fansubId: '' + t.id })}`}
                        class="px2 py1 block text-base-600 text-link-active"
                      >
                        {t.name}
                      </a>
                    ))
                  }
                </div>
              </div>
            </Dropdown>
          </div>
          <a href="https://share.dmhy.org/" target="_blank" class="header-item block">Âä®Êº´Ëä±Âõ≠</a>
        </div>
        <div>
          {
            enableFeed && (
              <a
                href={feed}
                target="_blank"
                class="header-item lt-sm:hidden block text-[#ee802f] hover:(!text-[#ff7800] !border-b-[#ff7800])"
              >
                <>
                  <span class="i-carbon-rss mr1" />
                  <span>RSS</span>
                </>
              </a>
            )
          }
        </div>
      </div>
    </header>
    <main class="main pb-8vh" transition:animate="slide">
      <slot />
    </main>
    <footer class="main pb-8vh select-none [&>div]:(flex items-center)" transition:persist>
      <div font-sm text-base-400>
        <span class="mr1 text-sm i-devicon-github op-80"></span>
        <a href="https://github.com/yjl9903/AnimeGarden" target="_blank" class="text-link-active"
          >yjl9903/AnimeGarden</a
        >
      </div>
      <div font-sm text-base-400>
        <span class="mr1 text-sm i-carbon-update-now op-80"></span>
         Refreshed at {timestamp.toLocaleString('zh-CN', { timeZone: 'Asia/ShangHai' })}
      </div>
      <div font-sm text-base-400>
        <span class="mr1 text-sm i-devicon-astro op-80"></span>
         Powered by Astro
      </div>
      <div font-sm text-base-400>
        <span class="mr1 text-sm i-devicon-cloudflare op-80"></span>
         Hosted on Cloudflare Pages
      </div>
    </footer>

    <div id="progress" class="hidden">
      <div></div>
      <div></div>
    </div>
    <script>
      import { onSet } from 'nanostores';

      import { loading } from '../state';

      document.addEventListener('click', (ev) => {
        const find = (node: HTMLElement) => {
          if (node && node.nodeName.toLowerCase() === 'a') {
            return node;
          }
          node = node?.parentNode;
          if (node && node.nodeName.toLowerCase() === 'a') {
            return node;
          }
        };
        const target = find(ev.target);
        if (target) {
          const href = target.getAttribute('href');
          if (target.getAttribute('target') !== '_blank') {
            if (href && (href.startsWith('/') || href.startsWith(window.location.origin))) {
              loading.set(true);
            }
          }
        }
      });

      onSet(loading, ({ newValue }) => {
        const progress = document.querySelector('#progress');
        if (newValue) {
          progress.classList.remove('hidden');
        } else {
          progress.classList.add('hidden');
        }
      });
    </script>

    <style is:global>
      @import '@onekuma/preset.css';
      @import '@onekuma/reset/tailwind.css';

      @import '../styles/cmdk.css';

      :root {
        /* --accent: 124, 58, 237; */
        --accent: 0, 204, 170;
        --accent-gradient: linear-gradient(
          45deg,
          rgb(var(--accent)),
          /* #da62c4 30%, */ #08c,
          white 60%
        );

        --color-bg-primary: #fcfcfc;
        --color-bg-secondary: #fafafa;
      }

      html {
        background-color: var(--color-bg-primary);

        --at-apply: font-sans;
      }

      code {
        --at-apply: font-mono;
      }

      .main {
        /* prettier-ignore */
        --at-apply: mx-auto mx-w-[90vw] lg:w-[80vw] md:w-[46rem] lt-md:mx-w-[95vw] lt-md:w-[95vw];
      }

      .text-gradient {
        background-image: var(--accent-gradient);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-size: 400%;
        background-position: 0%;
      }

      .text-link {
        /* prettier-ignore */
        --at-apply: text-sky-700 hover:text-sky-500;
      }

      .text-link-active {
        /* prettier-ignore */
        --at-apply: hover:text-sky-600;
      }

      .hide-scrollbar {
        -ms-overflow-style: none;
        scrollbar-width: none;
      }

      .hide-scrollbar::-webkit-scrollbar {
        display: none; /* Safari and Chrome */
      }

      /* Header style */
      .header-item {
        --at-apply: py2 border-b border-b-3 border-transparent w-max;
        /* prettier-ignore */
        --at-apply: hover:text-base-800 hover:border-dark-700;
      }

      .header-item[x-active] {
        --at-apply: border-orange-500;
      }

      #progress div {
        position: fixed;
        z-index: 1;
        top: 0;
        width: 20%;
        height: 3px;

        border-radius: 1px;
        background: linear-gradient(90deg, #fb923c, #fdba74);

        animation: loading-loop 1s;
        animation-timing-function: linear;
        animation-iteration-count: infinite;
      }

      #progress div:first-child {
        left: 0%;
      }

      #progress div:last-child {
        left: -20%;
        animation-delay: 0.8s;
      }

      @keyframes loading-loop {
        0% {
          transform: translateX(0%);
        }
        100% {
          transform: translateX(500%);
        }
      }
    </style>

    <!-- Cloudflare Web Analytics -->
    <script
      defer
      src="https://static.cloudflareinsights.com/beacon.min.js"
      data-cf-beacon='{"token": "e852b1db3a694a5a9b4af6b2cb3d682c"}'></script>
    <!-- End Cloudflare Web Analytics -->
  </body>
</html>
